name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version, e.g. 1.0.0'
        required: true
      notes:
        description: 'Release notes'
        required: false
      prerelease:
        description: 'Pre-release'
        required: false
        type: boolean
      draft:
        description: 'Draft'
        required: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cargo_extra_flags: --target x86_64-unknown-linux-musl
            output_executable: target/x86_64-unknown-linux-musl/release/rget
            output_executable_upload_as: rget-linux-x86_64
          - os: macos-latest
            output_executable: target/release/rget
            output_executable_upload_as: rget-mac-arm64
          - os: windows-latest
            output_executable: target/release/rget.exe
            output_executable_upload_as: rget-windows-x86_64.exe
    steps:
      - uses: actions/checkout@v3

      - name: Install Musl target
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: >
          sudo apt-get install musl-tools &&
          rustup target add x86_64-unknown-linux-musl &&
          musl-gcc --version

      - name: Versions
        run: cargo --version && rustc --version

      - name: Build
        run: cargo build --verbose --release --locked ${{ matrix.cargo_extra_flags }}

      - name: Rename Output
        shell: pwsh
        run: Move-Item -Path "${{ matrix.output_executable }}" -Destination "target/${{ matrix.output_executable_upload_as }}"

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install Maturin
        run: cargo binstall maturin

      - name: Build wheel
        run: maturin build --release --strip --locked ${{ matrix.cargo_extra_flags }}

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.os }}
          path: target/wheels/*.whl

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      # Required to create a release.
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ubuntu-latest/rget-linux-x86_64
          ubuntu-latest/wheels/*.whl
          macos-latest/rget-mac-arm64
          macos-latest/wheels/*.whl
          windows-latest/rget-windows-x86_64.exe
          windows-latest/wheels/*.whl
        fail_on_unmatched_files: true
        tag_name: ${{ inputs.version }}
        body: ${{ inputs.notes }}
        prerelease: ${{ inputs.prerelease }}
        draft: ${{ inputs.draft }}
